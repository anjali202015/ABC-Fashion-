@isTest
public class PostCustomerInfoTest {

    // Mock the HTTP response class
    class MockHttpResponseGenerator implements HttpCalloutMock {
        public HttpResponse respond(HttpRequest req) {
            HttpResponse res = new HttpResponse();
            res.setHeader('Content-Type', 'application/json');
            
            // Simulate a successful response with customer_id
            String responseBody = '{"status": "success", "customer_id": "12345678"}';
            res.setBody(responseBody);
            res.setStatusCode(200);
            return res;
        }
    }

    @isTest
    static void testPostCustomerInfo() {
        // Setup mock response for HTTP callout
        Test.setMock(HttpCalloutMock.class, new MockHttpResponseGenerator());

        // Retrieve the Record Type Id for 'Person Account' or other relevant record type
        RecordType personAccountRecordType = [SELECT Id FROM RecordType WHERE SObjectType = 'Account' AND DeveloperName = 'PersonAccount' LIMIT 1];

        // Create a mock Account record with the correct Record Type
        Account acc = new Account(
            FirstName= 'Test',
            LastName = 'Customer',
            PersonEmail = 'test@gmail.com',
            T_Shirt_Size__pc = 'XL',
            Shoe_Size__pc = 10.5,
            Profile_Completed__c = false, // Profile is not completed initially
            RecordTypeId = '012WU000003E6qDYAS'// Use the correct Record Type
        );
        insert acc;

        // Update "Profile Completed" to TRUE
        acc.Profile_Completed__c = true;
        update acc;

        // Verify the callout and field update
        Test.startTest();
        // Enqueue the job for PostCustomerInfo (this will invoke the future method)
        PostCustomerInfo.postCustomerInfo(acc.Id);
        Test.stopTest();

        // Assert the Account is updated with Loyalty Customer ID
        Account updatedAcc = [SELECT Loyalty_Customer_ID__c FROM Account WHERE Id = :acc.Id];
        System.assertNotEquals(null, updatedAcc.Loyalty_Customer_ID__c, 'Loyalty Customer ID should be populated.');
        System.assertEquals('12345678', updatedAcc.Loyalty_Customer_ID__c, 'Loyalty Customer ID should match the response.');
    }
}
